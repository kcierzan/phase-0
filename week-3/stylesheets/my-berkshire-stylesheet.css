body {
  color: #000080;
  background-color: #ffffff;
}

a {
  color: #800080;
}

a:visited {
  color: #ff0000;
}

h1 {
  font-weight: bold;
  font-size: 20px;
  text-align: center;
  border-bottom: thin solid black;
  background-color: black;
  color: white;
  font-family: 'Playfair Display SC', serif;
}

span {
  font-size: 36px;
}

.geico {
   text-align: center;
   border-bottom: thin solid black;
   border-top: thin solid black;
   font-size: 10px;
   padding-top: 20px;
   padding-bottom: 20px;
}

.comment {
   border-bottom: thin solid black;
   font-size: 12px;
   padding-top: 20px;
   padding-bottom: 20px;
}


ul {
  font-size: 12px;
}

li a {
  font-size: 14px;
  display: block;
}

#legal {
  font-size: 14px;
}

#copyright {
  font-size: 10px;
}

#copyright span {
  font-weight: bold;
  font-size: 10px;
}

.img img{
   position: absolute;
     width: 130px;
    height: 130px;
}

/*

What is important to know when linking an external file (like a stylesheet) to an HTML file?

When linking an external file to an HTML file, it is important to ensure that the path to the file is correct and will be reliable. If the file is hosted on another site, the path can be broken when the file is removed or moved on another server. When linking a stylesheet to an HTML document, it is important to know that elements are style according to the last read stylesheet if multiple stylesheets are used.

What tricks did you use to help you with positioning? How hard was it to get the site as you wanted it?

We used the display property, HTML tables, and borders as some less-than-pretty ways for getting the positioning we wanted. Although the site was fairly simple and straightforward in its positioning, simple tasks like creating columns and line breaks proved to be very difficult using only CSS.

What CSS did you use to modify the element style (like size, color, etc.)

We used pixel sizes primarily because I felt the most comfortable using a static size for the text that was easily comparable between elements. We resized an image for the optional release as well as changing the color styling on links and visited links.


Did you modify the HTML to include classes or ids? If so, which did you choose and why? If you didn't, how would you know which one to add to your HTML?

We did modify the HTML to include classes and IDs in an effort to style specific elements as separate from their parent elements. We chose to use ID only when it was a kind of "one-off" styling effort as the repeated use of IDs is cumbersome and confusing. We used classes when we wanted to break down an element into multiple "types" that were used alternately in the body of the page.

When you compared your site to the actual code base, which do you think had cleaner code that followed best practices and why?

Though I thought our page felt somewhat "hacky", I believe our code to be much more readable and clean that the actual code base. The actual site used inline CSS extensively, leading to a mass of tags and markup that made the overall structure of the site difficult to discern. Having a separate stylesheet adds tremendously to the readability og the site. */